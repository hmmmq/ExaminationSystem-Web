-- MySQL Script generated by MySQL Workbench
-- Sat Jun  5 19:07:46 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema examination
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `examination` ;

-- -----------------------------------------------------
-- Schema examination
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `examination` DEFAULT CHARACTER SET utf8 ;
USE `examination` ;

-- -----------------------------------------------------
-- Table `examination`.`teacher`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `examination`.`teacher` ;

CREATE TABLE IF NOT EXISTS `examination`.`teacher` (
  `teaid` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`teaid`))
ENGINE = InnoDB
AUTO_INCREMENT = 1002
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `examination`.`exam`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `examination`.`exam` ;

CREATE TABLE IF NOT EXISTS `examination`.`exam` (
  `examid` INT(11) NOT NULL AUTO_INCREMENT,
  `teaid` INT(11) NOT NULL,
  `createtime` DATE NOT NULL,
  `title` VARCHAR(10) NOT NULL DEFAULT '未命名',
  `duration` INT(11) NOT NULL,
  `publishstate` TINYINT(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`examid`),
  INDEX `teaid` (`teaid` ASC),
  CONSTRAINT `exam_ibfk_1`
    FOREIGN KEY (`teaid`)
    REFERENCES `examination`.`teacher` (`teaid`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `examination`.`item`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `examination`.`item` ;

CREATE TABLE IF NOT EXISTS `examination`.`item` (
  `itemid` INT(11) NOT NULL AUTO_INCREMENT,
  `examid` INT(11) NOT NULL,
  `type` INT(11) NOT NULL COMMENT '0单选,1多选',
  `content` VARCHAR(200) NOT NULL,
  `a` VARCHAR(50) NOT NULL,
  `b` VARCHAR(50) NOT NULL,
  `c` VARCHAR(50) NOT NULL,
  `d` VARCHAR(50) NOT NULL,
  `rightanswer` VARCHAR(10) NOT NULL,
  `point` INT(11) NOT NULL,
  PRIMARY KEY (`itemid`),
  INDEX `examid` (`examid` ASC),
  CONSTRAINT `item_ibfk_1`
    FOREIGN KEY (`examid`)
    REFERENCES `examination`.`exam` (`examid`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `examination`.`student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `examination`.`student` ;

CREATE TABLE IF NOT EXISTS `examination`.`student` (
  `stuid` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(10) NOT NULL,
  `academy` VARCHAR(30) NULL DEFAULT '计算机学院',
  `startyear` DATE NULL DEFAULT NULL,
  `degree` ENUM('本科生', '研究生', '博士') NULL DEFAULT '本科生',
  `major` VARCHAR(30) NULL DEFAULT NULL,
  `batchid` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`stuid`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `examination`.`choice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `examination`.`choice` ;

CREATE TABLE IF NOT EXISTS `examination`.`choice` (
  `itemid` INT(11) NOT NULL,
  `stuid` INT(11) NOT NULL,
  `examid` INT(11) NOT NULL,
  `stuanswer` VARCHAR(10) NOT NULL,
  `iscorrect` TINYINT(1) NOT NULL,
  `stupoint` VARCHAR(10) NOT NULL,
  INDEX `itemid` (`itemid` ASC),
  INDEX `stuid` (`stuid` ASC),
  INDEX `examid` (`examid` ASC),
  CONSTRAINT `choice_ibfk_1`
    FOREIGN KEY (`itemid`)
    REFERENCES `examination`.`item` (`itemid`),
  CONSTRAINT `choice_ibfk_2`
    FOREIGN KEY (`stuid`)
    REFERENCES `examination`.`student` (`stuid`),
  CONSTRAINT `choice_ibfk_3`
    FOREIGN KEY (`examid`)
    REFERENCES `examination`.`exam` (`examid`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `examination`.`publish`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `examination`.`publish` ;

CREATE TABLE IF NOT EXISTS `examination`.`publish` (
  `examid` INT(11) NOT NULL,
  `batchid` INT(11) NOT NULL,
  `publishtime` DATE NOT NULL,
  INDEX `examid` (`examid` ASC),
  CONSTRAINT `publish_ibfk_1`
    FOREIGN KEY (`examid`)
    REFERENCES `examination`.`exam` (`examid`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `examination`.`test`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `examination`.`test` ;

CREATE TABLE IF NOT EXISTS `examination`.`test` (
  `stuid` INT(11) NOT NULL,
  `examid` INT(11) NOT NULL,
  `submitstate` TINYINT(1) NOT NULL DEFAULT '0',
  `totalmark` INT(11) NULL DEFAULT '0',
  INDEX `stuid` (`stuid` ASC),
  INDEX `examid` (`examid` ASC),
  CONSTRAINT `test_ibfk_1`
    FOREIGN KEY (`stuid`)
    REFERENCES `examination`.`student` (`stuid`),
  CONSTRAINT `test_ibfk_2`
    FOREIGN KEY (`examid`)
    REFERENCES `examination`.`exam` (`examid`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

USE `examination`;

DELIMITER $$

USE `examination`$$
DROP TRIGGER IF EXISTS `examination`.`updatemark` $$
USE `examination`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `examination`.`updatemark`
AFTER INSERT ON `examination`.`choice`
FOR EACH ROW
begin
update test set totalmark=totalmark+cast(NEW.stupoint as SIGNED INTEGER) where stuid=NEW.stuid and examid=new.examid;
end$$


USE `examination`$$
DROP TRIGGER IF EXISTS `examination`.`updatemark1` $$
USE `examination`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `examination`.`updatemark1`
AFTER UPDATE ON `examination`.`choice`
FOR EACH ROW
begin
update test set totalmark=totalmark-cast(OLD.stupoint as SIGNED INTEGER) +cast(NEW.stupoint as SIGNED INTEGER) where stuid=NEW.stuid and examid=new.examid;
end$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
